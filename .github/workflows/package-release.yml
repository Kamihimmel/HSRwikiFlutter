name: Package Release

on:
  workflow_dispatch:

jobs:
  version:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: get-version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - id: get-version
        name: Get Version
        env:
          ENV_TAG: ${{ github.ref }}
        run: |
          echo "version=$(echo $ENV_TAG | sed 's/refs\/tags\/v//' | sed 's/+/./')" >> "$GITHUB_OUTPUT"
  package-windows-msix:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: windows-msix
    runs-on: windows-latest
    needs:
      - version
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.3.0
        with:
          flutter-version: '3.13.4'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build Windows Store
        env:
          ENV_MS_STORE_PUBLISHER_NAME: ${{ secrets.MS_STORE_PUBLISHER_NAME }}
          ENV_MS_STORE_IDENTITY_NAME: ${{ secrets.MS_STORE_IDENTITY_NAME }}
          ENV_MS_STORE_PUBLISHER: ${{ secrets.MS_STORE_PUBLISHER }}
          ENV_VERSION: ${{ needs.version.outputs.version }}
        run: |
          dart run msix:create --publisher-display-name "$env:ENV_MS_STORE_PUBLISHER_NAME" --identity-name "$env:ENV_MS_STORE_IDENTITY_NAME" --publisher "$env:ENV_MS_STORE_PUBLISHER" --version "$env:ENV_VERSION"
      - uses: actions/upload-artifact@v3
        with:
          name: windows-msix
          path: build\windows\runner\Release\hsrwikiproject.msix
  package-windows-exe:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: windows-exe
    runs-on: windows-latest
    needs:
      - version
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.3.0
        with:
          flutter-version: '3.13.4'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build
        run: |
          flutter build windows --obfuscate --split-debug-info=.\build\windows\runner\Debug
      - name: Build Windows InnoSetup
        env:
          ENV_VERSION: ${{ needs.version.outputs.version }}
        run: |
          tar zxvf tool\IS6.tar
          IS6\iscc .\windows\setup\hsrwikiproject.iss /DMyAppVersion=$env:ENV_VERSION
      - uses: actions/upload-artifact@v3
        env:
          ENV_VERSION: ${{ needs.version.outputs.version }}
        with:
          name: windows-exe
          path: windows\setup\hsrwikiproject-${{ env.ENV_VERSION }}.exe
  package-android:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: android-apk
    runs-on: ubuntu-latest
    needs:
      - version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: subosito/flutter-action@v2.3.0
        with:
          flutter-version: '3.13.4'
      - name: Install project dependencies
        run: flutter pub get
      - name: Android Apk
        env:
          ENV_ANDROID_STORE_PASS: ${{ secrets.ANDROID_STORE_PASS }}
          ENV_ANDROID_KEY_PASS: ${{ secrets.ANDROID_KEY_PASS }}
          ENV_ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ENV_ANDROID_UPLOAD_KEY: ${{ secrets.ANDROID_UPLOAD_KEY }}
          ENV_VERSION: ${{ needs.version.outputs.version }}
        run: |
          echo "storeFile=../upload-keystore.jks" > android/key.properties
          echo "storePassword=${ENV_ANDROID_STORE_PASS}" >> android/key.properties
          echo "keyPassword=${ENV_ANDROID_KEY_PASS}" >> android/key.properties
          echo "keyAlias=${ENV_ANDROID_KEY_ALIAS}" >> android/key.properties
          echo "${ENV_ANDROID_UPLOAD_KEY}" | base64 -d > android/upload-keystore.jks
          ls -l android/upload-keystore.jks
          flutter build apk --release
      - uses: actions/upload-artifact@v3
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: create-release
    runs-on: ubuntu-latest
    needs:
      - version
      - package-windows-msix
      - package-windows-exe
      - package-android
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: windows-msix
          path: build
      - uses: actions/download-artifact@v3
        with:
          name: windows-exe
          path: build
      - uses: actions/download-artifact@v3
        with:
          name: android-apk
          path: build
      - name: Rename File
        env:
          ENV_VERSION: ${{ needs.version.outputs.version }}
        run: |
          cp ./build/hsrwikiproject.msix ./build/hsrwikiproject-${ENV_VERSION}.msix
          cp ./build/app-release.apk ./build/hsrwikiproject-${ENV_VERSION}.apk
          tree ./build
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          ENV_VERSION: ${{ needs.version.outputs.version }}
        with:
          draft: true
          prerelease: true
          generate_release_notes: true
          files: |
            ./build/hsrwikiproject-${{ needs.version.outputs.version }}.msix
            ./build/hsrwikiproject-${{ needs.version.outputs.version }}.exe
            ./build/hsrwikiproject-${{ needs.version.outputs.version }}.apk
      - name: Commit to Wiki
        env:
          ENV_DEPLOY_KEY_WIKI: ${{ secrets.DEPLOY_KEY_WIKI }}
        run: |
          git config --global user.email "shengwu.code@gmail.com"
          git config --global user.name "workflow-release-package"
          mkdir -p ~/.ssh
          echo "${ENV_DEPLOY_KEY_WIKI}" > ~/.ssh/github_key
          chmod 400 ~/.ssh/github_key
          cat > ~/.ssh/config <<EOF
          Host *
            StrictHostKeyChecking no
            UserKnownHostsFile /dev/null
          Host github.com
            IdentityFile ~/.ssh/github_key
            Hostname ssh.github.com
            Port 443
          EOF
          cd build && git clone git@github.com:Kamihimmel/HSRwiki.git
          cd HSRwiki && mkdir -p downloads
          fs=$(./downloads/hsrwikiproject-* || echo)
          cp ../hsrwikiproject-* ./downloads
          git add downloads/*
          git commit -m "[update release package] ${GITHUB_RUN_ID}"
          git push
